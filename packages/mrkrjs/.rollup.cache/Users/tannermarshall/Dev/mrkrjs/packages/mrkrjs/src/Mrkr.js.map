{"version":3,"file":"Mrkr.js","sourceRoot":"","sources":["Mrkr.ts"],"names":[],"mappings":";AAUA,4BAA4B;AAC5B,SAAS,UAAU,CAAC,IAAU;IAC5B,OAAQ,IAAa,CAAC,QAAQ,KAAK,CAAC,CAAC;AACvC,CAAC;AAED,wBAAwB;AACxB,SAAS,aAAa,CAAC,MAAoB;IACzC,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC;AACtG,CAAC;AAED;;;;;GAKG;AACH,IAAM,cAAc,GAAG,UAAC,IAAS;IAC/B,IAAI,GAAG,GAAW,EAAE,CAAC;IAErB,6CAA6C;IAC7C,KAAK,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE;QAC1D,IAAI,UAAU,CAAC,IAAI,CAAC;YAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAChC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;KAC7C;IACD,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAkBF;IAeE,cAAY,KAAiB;QAA7B,iBAqBC;QArBW,sBAAA,EAAA,UAAiB;QAuF7B;;;;;WAKG;QACK,uBAAkB,GAAG,UAC3B,cAAoB,EACpB,WAAmB,EACnB,YAAkB,EAClB,SAAiB;YAEjB,IAAM,SAAS,GAAG,cAAc,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,mBAAmB,CAAC;YACxB,IAAI,iBAAiB,CAAC;YAEtB,SAAS,CAAC,IAAI,CAAC,UAAC,QAAQ;gBACtB,IAAI,CAAC,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,CAAA;oBAAE,OAAO,KAAK,CAAC;gBAEzC,IAAI,QAAQ,KAAK,cAAc,EAAE;oBAC/B,mBAAmB,GAAG,YAAY,GAAG,WAAW,CAAC;iBAClD;gBAED,IAAI,QAAQ,KAAK,YAAY,EAAE;oBAC7B,iBAAiB,GAAG,YAAY,GAAG,SAAS,CAAC;oBAC7C,OAAO,IAAI,CAAC;iBACb;gBAED,YAAY,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;gBAC5C,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,IAAI,mBAAmB,IAAI,iBAAiB,EAAE;gBAC5C,OAAO,EAAE,WAAW,EAAE,mBAAmB,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;aAC3E;YAED,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;QA3HE,IAAA,KAME,KAAK,QANgB,EAAvB,OAAO,mBAAG,QAAQ,CAAC,IAAI,KAAA,EACvB,KAKE,KAAK,UALgB,EAAvB,SAAS,mBAAG,WAAW,KAAA,EACvB,WAAW,GAIT,KAAK,YAJI,EACX,KAGE,KAAK,QAHY,EAAnB,OAAO,mBAAG,SAAS,KAAA,EACnB,KAEE,KAAK,QAFY,EAAnB,OAAO,mBAAG,SAAS,KAAA,EACnB,KACE,KAAK,QADO,EAAd,OAAO,mBAAG,IAAI,KAAA,CACN;QAEV,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED;;;;;;OAMG;IACK,8BAAe,GAAvB,UAAwB,KAAmB;QACzC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjC,IAAI,IAAI,CAAC,WAAW;gBAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACxD;IACH,CAAC;IAED;;;;;;OAMG;IACK,kCAAmB,GAA3B,UAA4B,SAAkB;QAC5C,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO,EAAE,CAAC;QAE7B,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAI,SAAS,IAAI,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED;;;;;;;;;OASG;IACK,4BAAa,GAArB,UAAsB,IAAwB,EAAE,WAAmB,EAAE,SAAiB;QAAhE,qBAAA,EAAA,SAAwB;QAC5C,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QAErB,IAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAE/D,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,IAAM,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC3D,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAEvD,IAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;YAC9E,IAAM,mBAAmB,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;YACrE,IAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YAEvE,mBAAmB,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YAErD,IAAM,QAAQ,GAAG,EAAE,CAAC;YACpB,IAAI,aAAa,CAAC,WAAW;gBAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC5D,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACnC,IAAI,WAAW,CAAC,WAAW;gBAAE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAExD,OAAO,QAAQ,CAAC;SACjB;QAED,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACzC,CAAC;IA0CD;;;;OAIG;IACK,uBAAQ,GAAhB;QACE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACnE,CAAC;IAED;;;;OAIG;IACK,yBAAU,GAAlB;QACE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACtE,CAAC;IAED;;;;;OAKG;IACH,2BAAY,GAAZ,UAAa,SAAiB;QAC5B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IAClC,CAAC;IAED;;;;;;;OAOG;IACH,sBAAO,GAAP,UAAQ,SAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO,EAAE,CAAC;QAE7B,IAAM,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAM,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,MAAM,CACrE,UAAC,GAAW,EAAE,OAAO,IAAK,uCAAI,GAAG,GAAK,cAAc,CAAC,OAAO,CAAC,GAAnC,CAAoC,EAC9D,EAAE,CACH,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,IAAM,IAAI,GAAgB,EAAE,CAAC;QAE7B,SAAS,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,WAAW;gBAAE,OAAO,KAAK,CAAC;YAExC,IAAM,mBAAmB,GAAG,oBAAoB,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,KAAK,QAAQ,EAAjB,CAAiB,CAAC,CAAC;YAEnF,IAAI,mBAAmB,EAAE;gBACvB,IAAI,CAAC,UAAU,EAAE;oBACf,IAAI,CAAC,IAAI,CAAC;wBACR,WAAW,EAAE,YAAY;wBACzB,IAAI,EAAE,QAAQ,CAAC,WAAW;wBAC1B,KAAK,EAAE,CAAC,mBAAmB,CAAC;qBAC7B,CAAC,CAAC;oBAEH,UAAU,GAAG,IAAI,CAAC;iBACnB;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,WAAW,CAAC;oBACnD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;iBACvD;gBAED,qCAAqC;gBACrC,IAAI,CAAC,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;iBAC9E;aACF;iBAAM,IAAI,UAAU,EAAE;gBACrB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,YAAY,CAAC;gBAC/C,UAAU,GAAG,KAAK,CAAC;aACpB;YAED,YAAY,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;YAE5C,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACH,yBAAU,GAAV,UAAW,OAAoB;QAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;;;;;OAMG;IACH,oBAAK,GAAL,UAAM,aAA6B;QACjC,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO;QAE1B,kCAAkC;QAClC,IAAM,OAAO,GAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,aAAa,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;QAE/D,IAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpD,IAAM,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/C,2CAA2C;QAC3C,IAAI,CAAC,OAAO,EAAE;YACZ,gBAAgB,CAAC,OAAO,CAAC,UAAC,eAAe;gBACvC,eAAe,CAAC,WAAW,OAA3B,eAAe,EAAgB,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE;YACzE,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,wFAAwF;YACxF,IAAI,cAAY,GAAG,CAAC,CAAC;YAErB,wEAAwE;YACxE,SAAS,CAAC,IAAI,CAAC,UAAC,QAAQ;;gBACtB,IACE,OAAO,CAAC,IAAI,CACV,UAAC,MAAM,IAAK,OAAA,aAAa,CAAC,MAAM,CAAC,IAAI,cAAY,IAAI,MAAM,CAAC,WAAW,IAAI,cAAY,IAAI,MAAM,CAAC,SAAS,EAA/F,CAA+F,CAC5G,EACD;oBACA,IAAM,eAAe,GAAG,gBAAgB,CAAC,IAAI,CAC3C,UAAC,IAAI,IAAK,OAAA,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,KAAK,QAAQ,EAAd,CAAc,CAAC,EAAzD,CAAyD,CACpE,CAAC;oBACF,IAAI,eAAe,EAAE;wBACnB,eAAe,CAAC,WAAW,OAA3B,eAAe,EAAgB,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE;qBACxE;iBACF;gBAED,qBAAqB;gBACrB,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,SAAS,EAAhB,CAAgB,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,OAAO,CAAC,KAAK,QAAQ,EAArB,CAAqB,CAAa,CAAC;gBACxG,IAAI,cAAY,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,IAAI,CAAC,EAAE;oBACpC,OAAO,IAAI,CAAC;iBACb;gBAED,cAAY,IAAI,CAAA,MAAA,QAAQ,CAAC,WAAW,0CAAE,MAAM,KAAI,CAAC,CAAC;gBAClD,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,wBAAS,GAAT;QACE,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QACxC,IAAM,OAAO,GAAgB,EAAE,CAAC;QAEhC,iCAAiC;QACjC,IAAI,CAAC,SAAS;YAAE,OAAO,OAAO,CAAC;QAE/B,oCAAoC;QACpC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC;YAC3E,OAAO,OAAO,CAAC;SAChB;QAED,IAAM,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAA,KAAoC,KAA0B,EAA5D,cAAc,oBAAA,EAAE,YAAY,kBAAgC,CAAC;QAErE,qCAAqC;QACrC,IAAI,UAAU,CAAC,cAAc,CAAC,IAAI,UAAU,CAAC,YAAY,CAAC,EAAE;YAC1D,IAAM,aAAa,GAAG,cAAc,CAAC;YACrC,IAAM,WAAW,GAAG,YAAY,CAAC;YAEjC,yCAAyC;YACzC,IAAI,aAAa,KAAK,WAAW,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,CAAC,WAAW;gBAAE,OAAO,OAAO,CAAC;YAE3F,6CAA6C;YAC7C,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,KAAK,CAAC,WAAW,EAAE,YAAY,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;YAE1G,0BAA0B;YAC1B,SAAS,CAAC,eAAe,EAAE,CAAC;YAE5B,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,SAAS,EAAE;gBAC5C,IAAM,QAAM,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC;gBAEvD,8BAA8B;gBACtB,IAAA,aAAW,GAAgB,OAAO,YAAvB,EAAE,WAAS,GAAK,OAAO,UAAZ,CAAa;gBAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,QAAM,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,QAAM,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;oBAC9F,OAAO,OAAO,CAAC;iBAChB;gBAED,oBAAoB;gBACpB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACjB,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAClC,IACE,UAAU,CAAC,IAAI,CACb,UAAC,SAAS;wBACR,OAAA,SAAS,CAAC,WAAW;4BACrB,SAAS,CAAC,SAAS;4BACnB,CAAC,CAAC,aAAW,GAAG,SAAS,CAAC,WAAW,IAAI,aAAW,GAAG,SAAS,CAAC,SAAS,CAAC;gCACzE,CAAC,WAAS,GAAG,SAAS,CAAC,WAAW,IAAI,WAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;oBAHzE,CAGyE,CAC5E,EACD;wBACA,OAAO,OAAO,CAAC;qBAChB;iBACF;aACF;YAED,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE;gBAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;aAC7D;YAED,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;;;;;OAOG;IACH,6BAAc,GAAd,UAAe,WAAmB,EAAE,SAAiB;QAArD,iBA0CC;QAzCC,IAAM,OAAO,GAAgB,EAAE,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC;YAC3E,OAAO,OAAO,CAAC;SAChB;QAED,IAAM,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/C,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,SAAS,CAAC,IAAI,CAAC,UAAC,QAAQ;YACtB,IAAI,CAAC,QAAQ,CAAC,WAAW;gBAAE,OAAO,KAAK,CAAC;YAExC,IAAM,eAAe,GAAG,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;YACnE,IAAI,WAAW,IAAI,YAAY,IAAI,WAAW,GAAG,eAAe,EAAE;gBAChE,IAAM,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,GAAG,YAAY,EAAE,SAAS,GAAG,YAAY,CAAC,CAAC;gBAChH,QAAQ,CAAC,WAAW,OAApB,QAAQ,EAAgB,QAAQ,EAAE;gBAElC,yCAAyC;gBACzC,UAAU,GAAG,IAAI,CAAC;aACnB;YAED,IAAI,SAAS,IAAI,YAAY,IAAI,SAAS,GAAG,eAAe,EAAE;gBAC5D,IAAM,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,EAAE,SAAS,GAAG,YAAY,CAAC,CAAC;gBACvF,QAAQ,CAAC,WAAW,OAApB,QAAQ,EAAgB,QAAQ,EAAE;gBAElC,eAAe;gBACf,OAAO,IAAI,CAAC;aACb;YACD,IAAI,UAAU,EAAE;gBACd,IAAM,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC1F,QAAQ,CAAC,WAAW,OAApB,QAAQ,EAAgB,QAAQ,EAAE;aACnC;YAED,YAAY,GAAG,eAAe,CAAC;YAC/B,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,kCAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,8BAAe,GAAf,UAAgB,SAAkB;QAChC,IAAI,CAAC,gBAAgB,GAAG,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC;IAChG,CAAC;IAED,8BAAe,GAAf;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,+BAAgB,GAAhB;QACE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IACH,WAAC;AAAD,CAAC,AA3aD,IA2aC","sourcesContent":["type OffsetProps = {\n  startOffset?: number;\n  endOffset?: number;\n};\n\ntype DataProps = OffsetProps & {\n  text: string;\n  nodes: Text[];\n};\n\n// Type guard for Text nodes\nfunction isTextNode(node: Node): node is Text {\n  return (node as Text).nodeType === 3;\n}\n\n// Type guard for offset\nfunction isValidOffset(offset?: OffsetProps): offset is { startOffset: number; endOffset: number } {\n  return !!(offset && typeof offset.startOffset === 'number' && typeof offset.endOffset === 'number');\n}\n\n/**\n * Gets an array of text nodes under the passed node\n *\n * @param {HTMLElement} node\n * @returns {[HTMLElement]} - array of text nodes\n */\nconst textNodesUnder = (node: any): Text[] => {\n  let all: Text[] = [];\n\n  // eslint-disable-next-line no-param-reassign\n  for (node = node.firstChild; node; node = node.nextSibling) {\n    if (isTextNode(node)) all.push(node);\n    else all = all.concat(textNodesUnder(node));\n  }\n  return all;\n};\n\ninterface Props {\n  element?: HTMLElement;\n  className?: string;\n  minimum?: number;\n  maximum?: number;\n  overlap?: boolean;\n  onSelection?: (e: PointerEvent, data: DataProps[]) => void;\n}\n\ninterface Range {\n  startContainer: ChildNode;\n  endContainer: ChildNode;\n  startOffset: number;\n  endOffset: number;\n}\n\nexport default class Mrkr {\n  element: HTMLElement;\n\n  highlightClass: string;\n\n  maximum?: number;\n\n  minimum?: number;\n\n  overlap?: boolean;\n\n  onSelection?: (e: PointerEvent, data: DataProps[]) => void;\n\n  private selectionEnabled: boolean;\n\n  constructor(props: Props = {}) {\n    const {\n      element = document.body,\n      className = 'highlight',\n      onSelection,\n      maximum = undefined,\n      minimum = undefined,\n      overlap = true,\n    } = props;\n\n    this.element = element;\n    this.highlightClass = className;\n    this.selectionEnabled = false;\n    this.maximum = maximum;\n    this.minimum = minimum;\n    this.overlap = overlap;\n    this.onSelection = onSelection;\n\n    this.handlePointerUp = this.handlePointerUp.bind(this);\n\n    this.setElement(element);\n  }\n\n  /**\n   * Callback run on pointerup\n   *\n   * @private\n   * @param {PointerEvent} event\n   * @memberof Mrkr\n   */\n  private handlePointerUp(event: PointerEvent) {\n    if (this.selectionEnabled) {\n      const results = this.highlight();\n\n      if (this.onSelection) this.onSelection(event, results);\n    }\n  }\n\n  /**\n   * Gets all nodes that have the current className\n   *\n   * @private\n   * @returns {HTMLElement[]}\n   * @memberof Mrkr\n   */\n  private getHighlightedNodes(className?: string): HTMLElement[] {\n    if (!this.element) return [];\n\n    return Array.from(this.element.querySelectorAll(`.${className || this.highlightClass}`));\n  }\n\n  /**\n   * Creates a set of highlighted and non-highlighted nodes to replace the passed text content\n   *\n   * @private\n   * @param {(string | null)} [text='']\n   * @param {number} startOffset\n   * @param {number} endOffset\n   * @returns {ChildNode[]}\n   * @memberof Mrkr\n   */\n  private highlightNode(text: string | null = '', startOffset: number, endOffset: number): ChildNode[] {\n    if (!text) return [];\n\n    const highlightedText = text.substring(startOffset, endOffset);\n\n    if (highlightedText.length > 0) {\n      const highlightedSpanNode = document.createElement('SPAN');\n      highlightedSpanNode.classList.add(this.highlightClass);\n\n      const startTextNode = document.createTextNode(text.substring(0, startOffset));\n      const highlightedTextNode = document.createTextNode(highlightedText);\n      const endTextNode = document.createTextNode(text.substring(endOffset));\n\n      highlightedSpanNode.appendChild(highlightedTextNode);\n\n      const newNodes = [];\n      if (startTextNode.textContent) newNodes.push(startTextNode);\n      newNodes.push(highlightedSpanNode);\n      if (endTextNode.textContent) newNodes.push(endTextNode);\n\n      return newNodes;\n    }\n\n    return [document.createTextNode(text)];\n  }\n\n  /**\n   * Converts relative range offset data to absolute offsets\n   *\n   * @private\n   * @memberof Mrkr\n   */\n  private getAbsoluteOffsets = (\n    startContainer: Text,\n    startOffset: number,\n    endContainer: Text,\n    endOffset: number,\n  ): OffsetProps => {\n    const textNodes = textNodesUnder(this.element);\n    let currentIndex = 0;\n    let absoluteStartOffset;\n    let absoluteEndOffset;\n\n    textNodes.some((textNode) => {\n      if (!textNode?.textContent) return false;\n\n      if (textNode === startContainer) {\n        absoluteStartOffset = currentIndex + startOffset;\n      }\n\n      if (textNode === endContainer) {\n        absoluteEndOffset = currentIndex + endOffset;\n        return true;\n      }\n\n      currentIndex += textNode.textContent.length;\n      return false;\n    });\n\n    if (absoluteStartOffset && absoluteEndOffset) {\n      return { startOffset: absoluteStartOffset, endOffset: absoluteEndOffset };\n    }\n\n    return {};\n  };\n\n  /**\n   * Adds the event listener for pointerup\n   *\n   * @memberof Mrkr\n   */\n  private register(): void {\n    this.element.addEventListener('pointerup', this.handlePointerUp);\n  }\n\n  /**\n   * Removes the event listener for pointerup\n   *\n   * @memberof Mrkr\n   */\n  private unregister(): void {\n    this.element.removeEventListener('pointerup', this.handlePointerUp);\n  }\n\n  /**\n   * Sets the current classname\n   *\n   * @param {string} className\n   * @memberof Mrkr\n   */\n  setClassName(className: string): void {\n    this.highlightClass = className;\n  }\n\n  /**\n   * Searches the container element for any highlighted nodes\n   * according to the current className\n   *\n   * @param {string} [className] - optional classname, otherwise will check for this.highlightClass\n   * @returns {DataProps[]}\n   * @memberof Mrkr\n   */\n  getData(className?: string): DataProps[] {\n    if (!this.element) return [];\n\n    const textNodes = textNodesUnder(this.element);\n    const highlightedTextNodes = this.getHighlightedNodes(className).reduce(\n      (arr: Text[], current) => [...arr, ...textNodesUnder(current)],\n      [],\n    );\n\n    let currentIndex = 0;\n\n    let startFound = false;\n\n    const data: DataProps[] = [];\n\n    textNodes.some((textNode, i) => {\n      if (!textNode.textContent) return false;\n\n      const highlightedTextNode = highlightedTextNodes.find((node) => node === textNode);\n\n      if (highlightedTextNode) {\n        if (!startFound) {\n          data.push({\n            startOffset: currentIndex,\n            text: textNode.textContent,\n            nodes: [highlightedTextNode],\n          });\n\n          startFound = true;\n        } else {\n          data[data.length - 1].text += textNode.textContent;\n          data[data.length - 1].nodes.push(highlightedTextNode);\n        }\n\n        // If this node is also the last node\n        if (i === textNodes.length - 1) {\n          data[data.length - 1].endOffset = currentIndex + textNode.textContent.length;\n        }\n      } else if (startFound) {\n        data[data.length - 1].endOffset = currentIndex;\n        startFound = false;\n      }\n\n      currentIndex += textNode.textContent.length;\n\n      return false;\n    });\n\n    return data;\n  }\n\n  /**\n   * Sets the current container element\n   *\n   * @param {HTMLElement} element\n   * @memberof Mrkr\n   */\n  setElement(element: HTMLElement): void {\n    this.unregister();\n    this.element = element;\n    this.register();\n  }\n\n  /**\n   * Clears all or part of the highlighted text blocks\n   *\n   * @param {OffsetProps[]} [offsetTargets] - optional array of offsets to target and remove\n   * @returns {void}\n   * @memberof Mrkr\n   */\n  clear(offsetTargets?: OffsetProps[]): void {\n    if (!this.element) return;\n\n    // Guard against bad offset inputs\n    const offsets = offsetTargets?.filter((o) => isValidOffset(o));\n\n    const highlightedNodes = this.getHighlightedNodes();\n    const textNodes = textNodesUnder(this.element);\n\n    // If offsets array not included, clear all\n    if (!offsets) {\n      highlightedNodes.forEach((highlightedNode) => {\n        highlightedNode.replaceWith(...Array.from(highlightedNode.childNodes));\n      });\n    } else {\n      // Clear all highlighted text that falls between the offsets in the passed offsets array\n      let currentIndex = 0;\n\n      // Clear any text nodes that fall inside any of the offset ranges passed\n      textNodes.some((textNode) => {\n        if (\n          offsets.find(\n            (offset) => isValidOffset(offset) && currentIndex >= offset.startOffset && currentIndex <= offset.endOffset,\n          )\n        ) {\n          const highlightedNode = highlightedNodes.find(\n            (node) => !!Array.from(node.childNodes).find((n) => n === textNode),\n          );\n          if (highlightedNode) {\n            highlightedNode.replaceWith(...Array.from(highlightedNode.childNodes));\n          }\n        }\n\n        // Can stop searching\n        const ends = offsets.map((offset) => offset.endOffset).filter((n) => typeof n === 'number') as number[];\n        if (currentIndex > Math.max(...ends)) {\n          return true;\n        }\n\n        currentIndex += textNode.textContent?.length || 0;\n        return false;\n      });\n    }\n  }\n\n  highlight(): DataProps[] {\n    const selection = window.getSelection();\n    const results: DataProps[] = [];\n\n    // If there's no selection object\n    if (!selection) return results;\n\n    // Container element must be defined\n    if (!this.element) {\n      console.error(new Error('Container element not defined for highlighter.'));\n      return results;\n    }\n\n    const range = selection.getRangeAt(0);\n\n    const { startContainer, endContainer } = (range as unknown) as Range;\n\n    // Ensure that results are Text nodes\n    if (isTextNode(startContainer) && isTextNode(endContainer)) {\n      const startTextNode = startContainer;\n      const endTextNode = endContainer;\n\n      // If no content's actually been selected\n      if (startTextNode === endTextNode && range.endOffset === range.startOffset) return results;\n\n      // Convert to absolute offsets in the element\n      const offsets = this.getAbsoluteOffsets(startContainer, range.startOffset, endContainer, range.endOffset);\n\n      // Remove native selection\n      selection.removeAllRanges();\n\n      if (offsets.startOffset && offsets.endOffset) {\n        const length = offsets.endOffset - offsets.startOffset;\n\n        // Check for minimum / maximum\n        const { startOffset, endOffset } = offsets;\n        if ((this.minimum && !(length >= this.minimum)) || (this.maximum && !(length <= this.maximum))) {\n          return results;\n        }\n\n        // Check for overlap\n        if (!this.overlap) {\n          const highlights = this.getData();\n          if (\n            highlights.some(\n              (highlight) =>\n                highlight.startOffset &&\n                highlight.endOffset &&\n                ((startOffset > highlight.startOffset && startOffset < highlight.endOffset) ||\n                  (endOffset > highlight.startOffset && endOffset < highlight.endOffset)),\n            )\n          ) {\n            return results;\n          }\n        }\n      }\n\n      if (isValidOffset(offsets)) {\n        this.highlightRange(offsets.startOffset, offsets.endOffset);\n      }\n\n      return this.getData();\n    }\n\n    return results;\n  }\n\n  /**\n   * Highlights a range of text determined by start and end offsets\n   *\n   * @param {number} startOffset - absolute offset in the element container\n   * @param {number} endOffset - absolute offset in the element container\n   * @returns {DataProps[]}\n   * @memberof Mrkr\n   */\n  highlightRange(startOffset: number, endOffset: number): DataProps[] {\n    const results: DataProps[] = [];\n\n    if (!this.element) {\n      console.error(new Error('Container element not defined for highlighter.'));\n      return results;\n    }\n\n    const textNodes = textNodesUnder(this.element);\n\n    let currentIndex = 0;\n    let startFound = false;\n\n    textNodes.some((textNode) => {\n      if (!textNode.textContent) return false;\n\n      const newCurrentIndex = currentIndex + textNode.textContent.length;\n      if (startOffset >= currentIndex && startOffset < newCurrentIndex) {\n        const newNodes = this.highlightNode(textNode.textContent, startOffset - currentIndex, endOffset - currentIndex);\n        textNode.replaceWith(...newNodes);\n\n        // Start collecting text nodes in between\n        startFound = true;\n      }\n\n      if (endOffset >= currentIndex && endOffset < newCurrentIndex) {\n        const newNodes = this.highlightNode(textNode.textContent, 0, endOffset - currentIndex);\n        textNode.replaceWith(...newNodes);\n\n        // End the loop\n        return true;\n      }\n      if (startFound) {\n        const newNodes = this.highlightNode(textNode.textContent, 0, textNode.textContent.length);\n        textNode.replaceWith(...newNodes);\n      }\n\n      currentIndex = newCurrentIndex;\n      return false;\n    });\n\n    return this.getData();\n  }\n\n  getSelectionEnabled(): boolean {\n    return this.selectionEnabled;\n  }\n\n  toggleSelection(isEnabled: boolean): void {\n    this.selectionEnabled = typeof isEnabled === 'undefined' ? !this.selectionEnabled : isEnabled;\n  }\n\n  enableSelection(): void {\n    this.selectionEnabled = true;\n  }\n\n  disableSelection(): void {\n    this.selectionEnabled = false;\n  }\n}\n"]}