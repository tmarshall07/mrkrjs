{"version":3,"file":"mrkrjs.js","sources":["../src/Mrkr.ts"],"sourcesContent":["type OffsetProps = {\n  startOffset?: number;\n  endOffset?: number;\n};\n\ntype DataProps = OffsetProps & {\n  text: string;\n  nodes: Text[];\n};\n\n// Type guard for Text nodes\nfunction isTextNode(node: Node): node is Text {\n  return (node as Text).nodeType === 3;\n}\n\n// Type guard for offset\nfunction isValidOffset(offset?: OffsetProps): offset is { startOffset: number; endOffset: number } {\n  return !!(offset && typeof offset.startOffset === 'number' && typeof offset.endOffset === 'number');\n}\n\n/**\n * Gets an array of text nodes under the passed node\n *\n * @param {HTMLElement} node\n * @returns {[HTMLElement]} - array of text nodes\n */\nconst textNodesUnder = (node: any): Text[] => {\n  let all: Text[] = [];\n\n  // eslint-disable-next-line no-param-reassign\n  for (node = node.firstChild; node; node = node.nextSibling) {\n    if (isTextNode(node)) all.push(node);\n    else all = all.concat(textNodesUnder(node));\n  }\n  return all;\n};\n\ninterface Props {\n  element?: HTMLElement;\n  className?: string;\n  minimum?: number;\n  maximum?: number;\n  overlap?: boolean;\n  onSelection?: (e: PointerEvent, data: DataProps[]) => void;\n}\n\ninterface Range {\n  startContainer: ChildNode;\n  endContainer: ChildNode;\n  startOffset: number;\n  endOffset: number;\n}\n\nexport default class Mrkr {\n  element: HTMLElement;\n\n  highlightClass: string;\n\n  maximum?: number;\n\n  minimum?: number;\n\n  overlap?: boolean;\n\n  onSelection?: (e: PointerEvent, data: DataProps[]) => void;\n\n  private selectionEnabled: boolean;\n\n  constructor(props: Props = {}) {\n    const {\n      element = document.body,\n      className = 'highlight',\n      onSelection,\n      maximum = undefined,\n      minimum = undefined,\n      overlap = true,\n    } = props;\n\n    this.element = element;\n    this.highlightClass = className;\n    this.selectionEnabled = false;\n    this.maximum = maximum;\n    this.minimum = minimum;\n    this.overlap = overlap;\n    this.onSelection = onSelection;\n\n    this.handlePointerUp = this.handlePointerUp.bind(this);\n\n    this.setElement(element);\n  }\n\n  /**\n   * Callback run on pointerup\n   *\n   * @private\n   * @param {PointerEvent} event\n   * @memberof Mrkr\n   */\n  private handlePointerUp(event: PointerEvent) {\n    if (this.selectionEnabled) {\n      const results = this.highlight();\n\n      if (this.onSelection) this.onSelection(event, results);\n    }\n  }\n\n  /**\n   * Gets all nodes that have the current className\n   *\n   * @private\n   * @returns {HTMLElement[]}\n   * @memberof Mrkr\n   */\n  private getHighlightedNodes(className?: string): HTMLElement[] {\n    if (!this.element) return [];\n\n    return Array.from(this.element.querySelectorAll(`.${className || this.highlightClass}`));\n  }\n\n  /**\n   * Creates a set of highlighted and non-highlighted nodes to replace the passed text content\n   *\n   * @private\n   * @param {(string | null)} [text='']\n   * @param {number} startOffset\n   * @param {number} endOffset\n   * @returns {ChildNode[]}\n   * @memberof Mrkr\n   */\n  private highlightNode(text: string | null = '', startOffset: number, endOffset: number): ChildNode[] {\n    if (!text) return [];\n\n    const highlightedText = text.substring(startOffset, endOffset);\n\n    if (highlightedText.length > 0) {\n      const highlightedSpanNode = document.createElement('SPAN');\n      highlightedSpanNode.classList.add(this.highlightClass);\n\n      const startTextNode = document.createTextNode(text.substring(0, startOffset));\n      const highlightedTextNode = document.createTextNode(highlightedText);\n      const endTextNode = document.createTextNode(text.substring(endOffset));\n\n      highlightedSpanNode.appendChild(highlightedTextNode);\n\n      const newNodes = [];\n      if (startTextNode.textContent) newNodes.push(startTextNode);\n      newNodes.push(highlightedSpanNode);\n      if (endTextNode.textContent) newNodes.push(endTextNode);\n\n      return newNodes;\n    }\n\n    return [document.createTextNode(text)];\n  }\n\n  /**\n   * Converts relative range offset data to absolute offsets\n   *\n   * @private\n   * @memberof Mrkr\n   */\n  private getAbsoluteOffsets = (\n    startContainer: Text,\n    startOffset: number,\n    endContainer: Text,\n    endOffset: number,\n  ): OffsetProps => {\n    const textNodes = textNodesUnder(this.element);\n    let currentIndex = 0;\n    let absoluteStartOffset;\n    let absoluteEndOffset;\n\n    textNodes.some((textNode) => {\n      if (!textNode?.textContent) return false;\n\n      if (textNode === startContainer) {\n        absoluteStartOffset = currentIndex + startOffset;\n      }\n\n      if (textNode === endContainer) {\n        absoluteEndOffset = currentIndex + endOffset;\n        return true;\n      }\n\n      currentIndex += textNode.textContent.length;\n      return false;\n    });\n\n    if (absoluteStartOffset && absoluteEndOffset) {\n      return { startOffset: absoluteStartOffset, endOffset: absoluteEndOffset };\n    }\n\n    return {};\n  };\n\n  /**\n   * Adds the event listener for pointerup\n   *\n   * @memberof Mrkr\n   */\n  private register(): void {\n    this.element.addEventListener('pointerup', this.handlePointerUp);\n  }\n\n  /**\n   * Removes the event listener for pointerup\n   *\n   * @memberof Mrkr\n   */\n  private unregister(): void {\n    this.element.removeEventListener('pointerup', this.handlePointerUp);\n  }\n\n  /**\n   * Sets the current classname\n   *\n   * @param {string} className\n   * @memberof Mrkr\n   */\n  setClassName(className: string): void {\n    this.highlightClass = className;\n  }\n\n  /**\n   * Searches the container element for any highlighted nodes\n   * according to the current className\n   *\n   * @param {string} [className] - optional classname, otherwise will check for this.highlightClass\n   * @returns {DataProps[]}\n   * @memberof Mrkr\n   */\n  getData(className?: string): DataProps[] {\n    if (!this.element) return [];\n\n    const textNodes = textNodesUnder(this.element);\n    const highlightedTextNodes = this.getHighlightedNodes(className).reduce(\n      (arr: Text[], current) => [...arr, ...textNodesUnder(current)],\n      [],\n    );\n\n    let currentIndex = 0;\n\n    let startFound = false;\n\n    const data: DataProps[] = [];\n\n    textNodes.some((textNode, i) => {\n      if (!textNode.textContent) return false;\n\n      const highlightedTextNode = highlightedTextNodes.find((node) => node === textNode);\n\n      if (highlightedTextNode) {\n        if (!startFound) {\n          data.push({\n            startOffset: currentIndex,\n            text: textNode.textContent,\n            nodes: [highlightedTextNode],\n          });\n\n          startFound = true;\n        } else {\n          data[data.length - 1].text += textNode.textContent;\n          data[data.length - 1].nodes.push(highlightedTextNode);\n        }\n\n        // If this node is also the last node\n        if (i === textNodes.length - 1) {\n          data[data.length - 1].endOffset = currentIndex + textNode.textContent.length;\n        }\n      } else if (startFound) {\n        data[data.length - 1].endOffset = currentIndex;\n        startFound = false;\n      }\n\n      currentIndex += textNode.textContent.length;\n\n      return false;\n    });\n\n    return data;\n  }\n\n  /**\n   * Sets the current container element\n   *\n   * @param {HTMLElement} element\n   * @memberof Mrkr\n   */\n  setElement(element: HTMLElement): void {\n    this.unregister();\n    this.element = element;\n    this.register();\n  }\n\n  /**\n   * Clears all or part of the highlighted text blocks\n   *\n   * @param {OffsetProps[]} [offsetTargets] - optional array of offsets to target and remove\n   * @returns {void}\n   * @memberof Mrkr\n   */\n  clear(offsetTargets?: OffsetProps[]): void {\n    if (!this.element) return;\n\n    // Guard against bad offset inputs\n    const offsets = offsetTargets?.filter((o) => isValidOffset(o));\n\n    const highlightedNodes = this.getHighlightedNodes();\n    const textNodes = textNodesUnder(this.element);\n\n    // If offsets array not included, clear all\n    if (!offsets) {\n      highlightedNodes.forEach((highlightedNode) => {\n        highlightedNode.replaceWith(...Array.from(highlightedNode.childNodes));\n      });\n    } else {\n      // Clear all highlighted text that falls between the offsets in the passed offsets array\n      let currentIndex = 0;\n\n      // Clear any text nodes that fall inside any of the offset ranges passed\n      textNodes.some((textNode) => {\n        if (\n          offsets.find(\n            (offset) => isValidOffset(offset) && currentIndex >= offset.startOffset && currentIndex <= offset.endOffset,\n          )\n        ) {\n          const highlightedNode = highlightedNodes.find(\n            (node) => !!Array.from(node.childNodes).find((n) => n === textNode),\n          );\n          if (highlightedNode) {\n            highlightedNode.replaceWith(...Array.from(highlightedNode.childNodes));\n          }\n        }\n\n        // Can stop searching\n        const ends = offsets.map((offset) => offset.endOffset).filter((n) => typeof n === 'number') as number[];\n        if (currentIndex > Math.max(...ends)) {\n          return true;\n        }\n\n        currentIndex += textNode.textContent?.length || 0;\n        return false;\n      });\n    }\n  }\n\n  highlight(): DataProps[] {\n    const selection = window.getSelection();\n    const results: DataProps[] = [];\n\n    // If there's no selection object\n    if (!selection) return results;\n\n    // Container element must be defined\n    if (!this.element) {\n      console.error(new Error('Container element not defined for highlighter.'));\n      return results;\n    }\n\n    const range = selection.getRangeAt(0);\n\n    const { startContainer, endContainer } = range as unknown as Range;\n\n    // Ensure that results are Text nodes\n    if (isTextNode(startContainer) && isTextNode(endContainer)) {\n      const startTextNode = startContainer;\n      const endTextNode = endContainer;\n\n      // If no content's actually been selected\n      if (startTextNode === endTextNode && range.endOffset === range.startOffset) return results;\n\n      // Convert to absolute offsets in the element\n      const offsets = this.getAbsoluteOffsets(startContainer, range.startOffset, endContainer, range.endOffset);\n\n      // Remove native selection\n      selection.removeAllRanges();\n\n      if (offsets.startOffset && offsets.endOffset) {\n        const length = offsets.endOffset - offsets.startOffset;\n\n        // Check for minimum / maximum\n        const { startOffset, endOffset } = offsets;\n        if ((this.minimum && !(length >= this.minimum)) || (this.maximum && !(length <= this.maximum))) {\n          return results;\n        }\n\n        // Check for overlap\n        if (!this.overlap) {\n          const highlights = this.getData();\n          if (\n            highlights.some(\n              (highlight) =>\n                highlight.startOffset &&\n                highlight.endOffset &&\n                ((startOffset > highlight.startOffset && startOffset < highlight.endOffset) ||\n                  (endOffset > highlight.startOffset && endOffset < highlight.endOffset)),\n            )\n          ) {\n            return results;\n          }\n        }\n      }\n\n      if (isValidOffset(offsets)) {\n        this.highlightRange(offsets.startOffset, offsets.endOffset);\n      }\n\n      return this.getData();\n    }\n\n    return results;\n  }\n\n  /**\n   * Highlights a range of text determined by start and end offsets\n   *\n   * @param {number} startOffset - absolute offset in the element container\n   * @param {number} endOffset - absolute offset in the element container\n   * @returns {DataProps[]}\n   * @memberof Mrkr\n   */\n  highlightRange(startOffset: number, endOffset: number): DataProps[] {\n    const results: DataProps[] = [];\n\n    if (!this.element) {\n      console.error(new Error('Container element not defined for highlighter.'));\n      return results;\n    }\n\n    const textNodes = textNodesUnder(this.element);\n\n    let currentIndex = 0;\n    let startFound = false;\n\n    textNodes.some((textNode) => {\n      if (!textNode.textContent) return false;\n\n      const newCurrentIndex = currentIndex + textNode.textContent.length;\n      if (startOffset >= currentIndex && startOffset < newCurrentIndex) {\n        const newNodes = this.highlightNode(textNode.textContent, startOffset - currentIndex, endOffset - currentIndex);\n        textNode.replaceWith(...newNodes);\n\n        // Start collecting text nodes in between\n        startFound = true;\n      }\n\n      if (endOffset >= currentIndex && endOffset < newCurrentIndex) {\n        const newNodes = this.highlightNode(textNode.textContent, 0, endOffset - currentIndex);\n        textNode.replaceWith(...newNodes);\n\n        // End the loop\n        return true;\n      }\n      if (startFound) {\n        const newNodes = this.highlightNode(textNode.textContent, 0, textNode.textContent.length);\n        textNode.replaceWith(...newNodes);\n      }\n\n      currentIndex = newCurrentIndex;\n      return false;\n    });\n\n    return this.getData();\n  }\n\n  getSelectionEnabled(): boolean {\n    return this.selectionEnabled;\n  }\n\n  toggleSelection(isEnabled: boolean): void {\n    this.selectionEnabled = typeof isEnabled === 'undefined' ? !this.selectionEnabled : isEnabled;\n  }\n\n  enableSelection(): void {\n    this.selectionEnabled = true;\n  }\n\n  disableSelection(): void {\n    this.selectionEnabled = false;\n  }\n}\n"],"names":["__spreadArray"],"mappings":"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"}