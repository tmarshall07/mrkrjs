{"version":3,"file":"bundle.umd.js","sources":["../../src/Mrkr.ts"],"sourcesContent":["type OffsetProps = {\n  startOffset?: number;\n  endOffset?: number;\n};\n\ntype DataProps = OffsetProps & {\n  text: string;\n  nodes: Text[];\n};\n\n// Type guard for Text nodes\nfunction isTextNode(node: Node): node is Text {\n  return (node as Text).nodeType === 3;\n}\n\n// Type guard for offset\nfunction isValidOffset(offset?: OffsetProps): offset is { startOffset: number; endOffset: number } {\n  return !!(offset && typeof offset.startOffset === 'number' && typeof offset.endOffset === 'number');\n}\n\n/**\n * Gets an array of text nodes under the passed node\n *\n * @param {HTMLElement} node\n * @returns {[HTMLElement]} - array of text nodes\n */\nconst textNodesUnder = (node: any): Text[] => {\n  let all: Text[] = [];\n\n  // eslint-disable-next-line no-param-reassign\n  for (node = node.firstChild; node; node = node.nextSibling) {\n    if (isTextNode(node)) all.push(node);\n    else all = all.concat(textNodesUnder(node));\n  }\n  return all;\n};\n\ninterface Props {\n  element?: HTMLElement;\n  className?: string;\n  minimum?: number;\n  maximum?: number;\n  overlap?: boolean;\n  onSelection?: (e: PointerEvent, data: DataProps[]) => void;\n}\n\ninterface Range {\n  startContainer: ChildNode;\n  endContainer: ChildNode;\n  startOffset: number;\n  endOffset: number;\n}\n\nexport default class Mrkr {\n  element: HTMLElement;\n\n  highlightClass: string;\n\n  maximum?: number;\n\n  minimum?: number;\n\n  overlap?: boolean;\n\n  onSelection?: (e: PointerEvent, data: DataProps[]) => void;\n\n  private selectionEnabled: boolean;\n\n  constructor(props: Props = {}) {\n    const {\n      element = document.body,\n      className = 'highlight',\n      onSelection,\n      maximum = undefined,\n      minimum = undefined,\n      overlap = true,\n    } = props;\n\n    this.element = element;\n    this.highlightClass = className;\n    this.selectionEnabled = false;\n    this.maximum = maximum;\n    this.minimum = minimum;\n    this.overlap = overlap;\n    this.onSelection = onSelection;\n\n    this.handlePointerUp = this.handlePointerUp.bind(this);\n\n    this.setElement(element);\n  }\n\n  /**\n   * Callback run on pointerup\n   *\n   * @private\n   * @param {PointerEvent} event\n   * @memberof Mrkr\n   */\n  private handlePointerUp(event: PointerEvent) {\n    if (this.selectionEnabled) {\n      const results = this.highlight();\n\n      if (this.onSelection) this.onSelection(event, results);\n    }\n  }\n\n  /**\n   * Gets all nodes that have the current className\n   *\n   * @private\n   * @returns {HTMLElement[]}\n   * @memberof Mrkr\n   */\n  private getHighlightedNodes(className?: string): HTMLElement[] {\n    if (!this.element) return [];\n\n    return Array.from(this.element.querySelectorAll(`.${className || this.highlightClass}`));\n  }\n\n  /**\n   * Creates a set of highlighted and non-highlighted nodes to replace the passed text content\n   *\n   * @private\n   * @param {(string | null)} [text='']\n   * @param {number} startOffset\n   * @param {number} endOffset\n   * @returns {ChildNode[]}\n   * @memberof Mrkr\n   */\n  private highlightNode(text: string | null = '', startOffset: number, endOffset: number): ChildNode[] {\n    if (!text) return [];\n\n    const highlightedText = text.substring(startOffset, endOffset);\n\n    if (highlightedText.length > 0) {\n      const highlightedSpanNode = document.createElement('SPAN');\n      highlightedSpanNode.classList.add(this.highlightClass);\n\n      const startTextNode = document.createTextNode(text.substring(0, startOffset));\n      const highlightedTextNode = document.createTextNode(highlightedText);\n      const endTextNode = document.createTextNode(text.substring(endOffset));\n\n      highlightedSpanNode.appendChild(highlightedTextNode);\n\n      const newNodes = [];\n      if (startTextNode.textContent) newNodes.push(startTextNode);\n      newNodes.push(highlightedSpanNode);\n      if (endTextNode.textContent) newNodes.push(endTextNode);\n\n      return newNodes;\n    }\n\n    return [document.createTextNode(text)];\n  }\n\n  /**\n   * Converts relative range offset data to absolute offsets\n   *\n   * @private\n   * @memberof Mrkr\n   */\n  private getAbsoluteOffsets = (\n    startContainer: Text,\n    startOffset: number,\n    endContainer: Text,\n    endOffset: number,\n  ): OffsetProps => {\n    const textNodes = textNodesUnder(this.element);\n    let currentIndex = 0;\n    let absoluteStartOffset;\n    let absoluteEndOffset;\n\n    textNodes.some((textNode) => {\n      if (!textNode?.textContent) return false;\n\n      if (textNode === startContainer) {\n        absoluteStartOffset = currentIndex + startOffset;\n      }\n\n      if (textNode === endContainer) {\n        absoluteEndOffset = currentIndex + endOffset;\n        return true;\n      }\n\n      currentIndex += textNode.textContent.length;\n      return false;\n    });\n\n    if (absoluteStartOffset && absoluteEndOffset) {\n      return { startOffset: absoluteStartOffset, endOffset: absoluteEndOffset };\n    }\n\n    return {};\n  };\n\n  /**\n   * Adds the event listener for pointerup\n   *\n   * @memberof Mrkr\n   */\n  private register(): void {\n    this.element.addEventListener('pointerup', this.handlePointerUp);\n  }\n\n  /**\n   * Removes the event listener for pointerup\n   *\n   * @memberof Mrkr\n   */\n  private unregister(): void {\n    this.element.removeEventListener('pointerup', this.handlePointerUp);\n  }\n\n  /**\n   * Sets the current classname\n   *\n   * @param {string} className\n   * @memberof Mrkr\n   */\n  setClassName(className: string): void {\n    this.highlightClass = className;\n  }\n\n  /**\n   * Searches the container element for any highlighted nodes\n   * according to the current className\n   *\n   * @param {string} [className] - optional classname, otherwise will check for this.highlightClass\n   * @returns {DataProps[]}\n   * @memberof Mrkr\n   */\n  getData(className?: string): DataProps[] {\n    if (!this.element) return [];\n\n    const textNodes = textNodesUnder(this.element);\n    const highlightedTextNodes = this.getHighlightedNodes(className).reduce(\n      (arr: Text[], current) => [...arr, ...textNodesUnder(current)],\n      [],\n    );\n\n    let currentIndex = 0;\n\n    let startFound = false;\n\n    const data: DataProps[] = [];\n\n    textNodes.some((textNode, i) => {\n      if (!textNode.textContent) return false;\n\n      const highlightedTextNode = highlightedTextNodes.find((node) => node === textNode);\n\n      if (highlightedTextNode) {\n        if (!startFound) {\n          data.push({\n            startOffset: currentIndex,\n            text: textNode.textContent,\n            nodes: [highlightedTextNode],\n          });\n\n          startFound = true;\n        } else {\n          data[data.length - 1].text += textNode.textContent;\n          data[data.length - 1].nodes.push(highlightedTextNode);\n        }\n\n        // If this node is also the last node\n        if (i === textNodes.length - 1) {\n          data[data.length - 1].endOffset = currentIndex + textNode.textContent.length;\n        }\n      } else if (startFound) {\n        data[data.length - 1].endOffset = currentIndex;\n        startFound = false;\n      }\n\n      currentIndex += textNode.textContent.length;\n\n      return false;\n    });\n\n    return data;\n  }\n\n  /**\n   * Sets the current container element\n   *\n   * @param {HTMLElement} element\n   * @memberof Mrkr\n   */\n  setElement(element: HTMLElement): void {\n    this.unregister();\n    this.element = element;\n    this.register();\n  }\n\n  /**\n   * Clears all or part of the highlighted text blocks\n   *\n   * @param {OffsetProps[]} [offsetTargets] - optional array of offsets to target and remove\n   * @returns {void}\n   * @memberof Mrkr\n   */\n  clear(offsetTargets?: OffsetProps[]): void {\n    if (!this.element) return;\n\n    // Guard against bad offset inputs\n    const offsets = offsetTargets?.filter((o) => isValidOffset(o));\n\n    const highlightedNodes = this.getHighlightedNodes();\n    const textNodes = textNodesUnder(this.element);\n\n    // If offsets array not included, clear all\n    if (!offsets) {\n      highlightedNodes.forEach((highlightedNode) => {\n        highlightedNode.replaceWith(...Array.from(highlightedNode.childNodes));\n      });\n    } else {\n      // Clear all highlighted text that falls between the offsets in the passed offsets array\n      let currentIndex = 0;\n\n      // Clear any text nodes that fall inside any of the offset ranges passed\n      textNodes.some((textNode) => {\n        if (\n          offsets.find(\n            (offset) => isValidOffset(offset) && currentIndex >= offset.startOffset && currentIndex <= offset.endOffset,\n          )\n        ) {\n          const highlightedNode = highlightedNodes.find(\n            (node) => !!Array.from(node.childNodes).find((n) => n === textNode),\n          );\n          if (highlightedNode) {\n            highlightedNode.replaceWith(...Array.from(highlightedNode.childNodes));\n          }\n        }\n\n        // Can stop searching\n        const ends = offsets.map((offset) => offset.endOffset).filter((n) => typeof n === 'number') as number[];\n        if (currentIndex > Math.max(...ends)) {\n          return true;\n        }\n\n        currentIndex += textNode.textContent?.length || 0;\n        return false;\n      });\n    }\n  }\n\n  highlight(): DataProps[] {\n    const selection = window.getSelection();\n    const results: DataProps[] = [];\n\n    // If there's no selection object\n    if (!selection) return results;\n\n    // Container element must be defined\n    if (!this.element) {\n      console.error(new Error('Container element not defined for highlighter.'));\n      return results;\n    }\n\n    const range = selection.getRangeAt(0);\n\n    const { startContainer, endContainer } = range as unknown as Range;\n\n    // Ensure that results are Text nodes\n    if (isTextNode(startContainer) && isTextNode(endContainer)) {\n      const startTextNode = startContainer;\n      const endTextNode = endContainer;\n\n      // If no content's actually been selected\n      if (startTextNode === endTextNode && range.endOffset === range.startOffset) return results;\n\n      // Convert to absolute offsets in the element\n      const offsets = this.getAbsoluteOffsets(startContainer, range.startOffset, endContainer, range.endOffset);\n\n      // Remove native selection\n      selection.removeAllRanges();\n\n      if (offsets.startOffset && offsets.endOffset) {\n        const length = offsets.endOffset - offsets.startOffset;\n\n        // Check for minimum / maximum\n        const { startOffset, endOffset } = offsets;\n        if ((this.minimum && !(length >= this.minimum)) || (this.maximum && !(length <= this.maximum))) {\n          return results;\n        }\n\n        // Check for overlap\n        if (!this.overlap) {\n          const highlights = this.getData();\n          if (\n            highlights.some(\n              (highlight) =>\n                highlight.startOffset &&\n                highlight.endOffset &&\n                ((startOffset > highlight.startOffset && startOffset < highlight.endOffset) ||\n                  (endOffset > highlight.startOffset && endOffset < highlight.endOffset)),\n            )\n          ) {\n            return results;\n          }\n        }\n      }\n\n      if (isValidOffset(offsets)) {\n        this.highlightRange(offsets.startOffset, offsets.endOffset);\n      }\n\n      return this.getData();\n    }\n\n    return results;\n  }\n\n  /**\n   * Highlights a range of text determined by start and end offsets\n   *\n   * @param {number} startOffset - absolute offset in the element container\n   * @param {number} endOffset - absolute offset in the element container\n   * @returns {DataProps[]}\n   * @memberof Mrkr\n   */\n  highlightRange(startOffset: number, endOffset: number): DataProps[] {\n    const results: DataProps[] = [];\n\n    if (!this.element) {\n      console.error(new Error('Container element not defined for highlighter.'));\n      return results;\n    }\n\n    const textNodes = textNodesUnder(this.element);\n\n    let currentIndex = 0;\n    let startFound = false;\n\n    textNodes.some((textNode) => {\n      if (!textNode.textContent) return false;\n\n      const newCurrentIndex = currentIndex + textNode.textContent.length;\n      if (startOffset >= currentIndex && startOffset < newCurrentIndex) {\n        const newNodes = this.highlightNode(textNode.textContent, startOffset - currentIndex, endOffset - currentIndex);\n        textNode.replaceWith(...newNodes);\n\n        // Start collecting text nodes in between\n        startFound = true;\n      }\n\n      if (endOffset >= currentIndex && endOffset < newCurrentIndex) {\n        const newNodes = this.highlightNode(textNode.textContent, 0, endOffset - currentIndex);\n        textNode.replaceWith(...newNodes);\n\n        // End the loop\n        return true;\n      }\n      if (startFound) {\n        const newNodes = this.highlightNode(textNode.textContent, 0, textNode.textContent.length);\n        textNode.replaceWith(...newNodes);\n      }\n\n      currentIndex = newCurrentIndex;\n      return false;\n    });\n\n    return this.getData();\n  }\n\n  getSelectionEnabled(): boolean {\n    return this.selectionEnabled;\n  }\n\n  toggleSelection(isEnabled: boolean): void {\n    this.selectionEnabled = typeof isEnabled === 'undefined' ? !this.selectionEnabled : isEnabled;\n  }\n\n  enableSelection(): void {\n    this.selectionEnabled = true;\n  }\n\n  disableSelection(): void {\n    this.selectionEnabled = false;\n  }\n}\n"],"names":["isTextNode","node","nodeType","isValidOffset","offset","startOffset","endOffset","textNodesUnder","all","firstChild","nextSibling","push","concat","Mrkr","props","startContainer","endContainer","textNodes","element","currentIndex","absoluteStartOffset","absoluteEndOffset","some","textNode","textContent","length","document","body","className","onSelection","maximum","undefined","minimum","overlap","highlightClass","selectionEnabled","handlePointerUp","bind","setElement","event","results","highlight","Array","from","querySelectorAll","text","highlightedText","substring","highlightedSpanNode","createElement","classList","add","startTextNode","createTextNode","highlightedTextNode","endTextNode","appendChild","newNodes","addEventListener","removeEventListener","highlightedTextNodes","getHighlightedNodes","reduce","arr","current","startFound","data","i","find","nodes","unregister","register","offsetTargets","offsets","filter","o","highlightedNodes","forEach","highlightedNode","replaceWith","childNodes","n","ends","map","Math","max","selection","window","getSelection","console","error","Error","range","getRangeAt","getAbsoluteOffsets","removeAllRanges","highlights","getData","highlightRange","newCurrentIndex","highlightNode","isEnabled"],"mappings":"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"}